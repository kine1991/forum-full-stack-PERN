version: '3'
services:
  frontend:
    build: ./frontend
    container_name: forum-frontend
    ports:
      - 3000:3000
    restart: unless-stopped
    command: serve -s build -l 3000
    networks:
      - forum-network

  api_db:
    container_name: forum-api-db
    image: 'postgres:latest'
    ports:
      - 5432:5432
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
      - POSTGRES_USER=nikolay
      - POSTGRES_HOST=api_db
      - POSTGRES_DB=mydb
      - POSTGRES_PASSWORD=root1234
      - POSTGRES_PORT=5432
    volumes: 
      - posgres_api_db
    networks:
      - forum-network
    volumes: 
      - posgres_api_db:/var/libs/postgresql/data
  
  api:
    build: ./api
    container_name: forum-api
    restart: unless-stopped
    command: npm run start
    ports:
      - 3001:3001
    environment:
      - PORT=3001
      - POSTGRES_USER=nikolay
      - POSTGRES_HOST=api_db
      - POSTGRES_DB=mydb
      - POSTGRES_PASSWORD=root1234
      - POSTGRES_PORT=5432
      - JWT_SECRET=supermegasecret
      - JWT_EXPIRES_IN=90d
      - JWT_COOKIE_EXPIRES_IN=90
    networks:
      - forum-network
      # psql postgres://nikolay:root1234@api_db:5432/mydb
      # psql postgres://nikolay:root1234@localhost:5432/mydb
    links:
      - api_db
    depends_on:
      - api_db

  nginx:
    image: nginx:stable-alpine
    container_name: forum-nginx
    ports:
      - 81:80
      # - 443:443 # включить при продакшене
    depends_on:
      - frontend
      - api
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
      # - /my-data/ssl-sertificate:/etc/nginx/ssl-sertificate # включить при продакшене
    networks:
      - forum-network

volumes: 
  posgres_api_db:

networks:
  forum-network:
    driver: bridge